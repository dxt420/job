# Generated by Django 2.1.5 on 2019-03-31 15:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_company', models.BooleanField(default='False')),
                ('is_seeker', models.BooleanField(default='False')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AppliedJobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.FileField(blank='True', upload_to='media/files/cover')),
                ('academic', models.FileField(blank='True', upload_to='media/files/academic')),
                ('rec', models.FileField(blank='True', upload_to='media/files/recomendations')),
                ('date_applied', models.DateTimeField(auto_now=True)),
                ('academic_extract', models.CharField(blank='True', max_length=5000)),
            ],
            options={
                'ordering': ['-seeker__rating'],
            },
        ),
        migrations.CreateModel(
            name='CVEdu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('from_date', models.CharField(max_length=100)),
                ('end_date', models.CharField(max_length=100)),
                ('school', models.CharField(blank='True', max_length=100)),
                ('level', models.CharField(blank='True', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CVLan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('spoken', models.CharField(max_length=100)),
                ('written', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CVPro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('percent', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CVRef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CVWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('from_date', models.CharField(max_length=100)),
                ('end_date', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('companytype', models.CharField(blank='True', max_length=100)),
                ('description', models.CharField(blank='True', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Extract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('jobtype', models.CharField(max_length=100)),
                ('description', models.CharField(blank='True', max_length=1000)),
                ('phone', models.CharField(blank='True', max_length=100)),
                ('email', models.CharField(blank='True', max_length=100)),
                ('offered_salary', models.CharField(max_length=100)),
                ('exp', models.CharField(max_length=100)),
                ('jobindustry', models.CharField(max_length=100)),
                ('deadline', models.CharField(max_length=100)),
                ('qualification', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('skills2', models.CharField(blank='True', max_length=1000)),
                ('exp2', models.CharField(blank='True', max_length=1000)),
                ('gender', models.CharField(blank='True', max_length=100)),
                ('status', models.BooleanField(blank='True', default='True')),
                ('date_created', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('title', models.CharField(max_length=100)),
                ('since', models.CharField(max_length=100)),
                ('team', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('website', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('logo', models.ImageField(blank='True', upload_to='media/company')),
            ],
        ),
        migrations.CreateModel(
            name='CVPri',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('full_name', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=20)),
                ('marital_status', models.CharField(max_length=100)),
                ('nationality', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Seeker',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('age', models.CharField(max_length=100)),
                ('gender', models.CharField(blank='True', max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('website', models.CharField(blank='True', max_length=100)),
                ('address', models.CharField(blank='True', max_length=100)),
                ('description', models.CharField(blank='True', max_length=500)),
                ('usericon', models.ImageField(blank='True', upload_to='media/seekersicon')),
                ('rating', models.IntegerField(blank=True, default=0)),
            ],
            options={
                'ordering': ['-rating'],
            },
        ),
        migrations.AddField(
            model_name='cvwork',
            name='user',
            field=models.ForeignKey(blank='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cvref',
            name='user',
            field=models.ForeignKey(blank='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cvpro',
            name='user',
            field=models.ForeignKey(blank='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cvlan',
            name='user',
            field=models.ForeignKey(blank='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cvedu',
            name='user',
            field=models.ForeignKey(blank='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appliedjobs',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.Job'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='job',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.Company'),
        ),
        migrations.AddField(
            model_name='extract',
            name='seeker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.Seeker'),
        ),
        migrations.AddField(
            model_name='appliedjobs',
            name='seeker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.Seeker'),
        ),
    ]
